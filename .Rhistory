system('git checkout dev')
system('git pull')
install.packages(c("BH", "boot", "broom", "cluster", "curl", "DBI", "devtools", "dplyr", "evaluate", "formatR", "ggplot2", "git2r", "gtable", "highr", "htmltools", "htmlwidgets", "httr", "jsonlite", "knitr", "latticeExtra", "lazyeval", "maps", "maptools", "Matrix", "memoise", "mgcv", "mnormt", "munsell", "nlme", "nnet", "openssl", "plyr", "psych", "raster", "rasterVis", "Rcpp", "RCurl", "readxl", "rgdal", "rgeos", "rJava", "rmarkdown", "RMySQL", "rstudioapi", "scales", "shiny", "sp", "stringi", "survival", "swirl", "testthat", "tidyr", "xml2", "zoo"))
head(cars)
head(pressure)
library(googlesheets) # install.packages('googlesheets') # by Jenny Bryan
install.packages('googlesheets')
library(tidyverse)
library(readr)
gs_auth(new_user = TRUE)
library(googlesheets) # install.packages('googlesheets') # by Jenny Bryan
gs_auth(new_user = TRUE)
master_list <-  googlesheets::gs_url('https://docs.google.com/spreadsheets/d/1Xh8-36cLCEa_bppqLJu-nukVgPDT8xVEd9nxEaPYKKg/edit#gid=2018368498') %>%
googlesheets::gs_read()
head(master_list)
write.csv(master_list,
paste0('~/github/ohidev/OHI_CountriesMaster/OHI_CountriesMaster_', Sys.Date(), '.csv'))
display_list <- master_list %>%
select(country     = Country,
ohi_plus    = OHI_plus,
phase       = Phase,
map_display = Map_Display,
display     = Display,
lat         = Latitude,
lon         = Longitude) %>%
filter(!is.na(display)) # remove rows that don't have point/shapefile
n_ohi_plus <- display_list %>%
filter(ohi_plus == 'YES')
n_ohi_plus_active <- n_ohi_plus %>%
filter(phase == 'active')
cat(sprintf('Total count of OHI+ assessments is %s!', dim(n_ohi_plus)[1]))
cat(sprintf('And %s are active, %s are completed OHI+ assessments.',
dim(n_ohi_plus_active)[1],
dim(n_ohi_plus)[1]- dim(n_ohi_plus_active)[1]))
## filter shapefiles to display
display_shp <-  display_list %>%
filter(map_display == 'shapefile')
old <- read.csv("assets/maps/regions_shape.csv")
if(length(setdiff(display_shp$country, old$country))>0){
warning('Countries with shapefiles have been added, will need to update the shapefile map')
}
display_pt <-  display_list %>%
filter(map_display == 'point')
if (NA %in% display_pt$lat | NA %in% display_pt$lon){
stop(sprintf('Missing lat or lon field for region to be displayed. Must fix or will not map proplerly.\n'))
}
old <- read.csv("assets/maps/regions_point.csv")
if(length(setdiff(display_pt$country, old$country))>0){
warning('Countries with points have been added, will need to update the point map')
}
if (nrow(display_pt) + nrow(display_shp) != nrow(display_list)) {
warning('please make sure all the countries to display have either shapefiles or lat/longs')
}
write.csv(display_shp, "assets/maps/regions_shape.csv", row.names=FALSE)
write.csv(display_pt, "assets/maps/regions_point.csv", row.names=FALSE)
library(tidyverse)
library(sp)
library(rgdal)
library(raster)
library(leaflet)
library(htmlwidgets)
library(jsonlite)
library(RColorBrewer)
library(rgeos)
dir_M <- c('Windows' = '//mazu.nceas.ucsb.edu/ohi',
'Darwin'  = '/Volumes/ohi',    ### connect (cmd-K) to smb://mazu/ohi
'Linux'   = '/home/shares/ohi')[[ Sys.info()[['sysname']] ]]
if (Sys.info()[['sysname']] != 'Linux' & !file.exists(dir_M)){
warning(sprintf("The Mazu directory dir_M set in src/R/common.R does not exist. Do you need to mount Mazu: %s?", dir_M))
}
dir_M <- c('Windows' = '//mazu.nceas.ucsb.edu/ohi',
'Darwin'  = '/Volumes/ohi',    ### connect (cmd-K) to smb://mazu/ohi
'Linux'   = '/home/shares/ohi')[[ Sys.info()[['sysname']] ]]
if (Sys.info()[['sysname']] != 'Linux' & !file.exists(dir_M)){
warning(sprintf("The Mazu directory dir_M set in src/R/common.R does not exist. Do you need to mount Mazu: %s?", dir_M))
}
region_poly <- readOGR(dsn='/var/data/ohi/git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions',
layer="allRegions")
library(googlesheets) # install.packages('googlesheets') # by Jenny Bryan
library(tidyverse)
library(readr)
gs_auth(new_user = TRUE)
master_list <-  googlesheets::gs_url('https://docs.google.com/spreadsheets/d/1Xh8-36cLCEa_bppqLJu-nukVgPDT8xVEd9nxEaPYKKg/edit#gid=2018368498') %>%
googlesheets::gs_read()
head(master_list)
write.csv(master_list,
paste0('~/github/ohidev/OHI_CountriesMaster/OHI_CountriesMaster_', Sys.Date(), '.csv'))
display_list <- master_list %>%
select(country     = Country,
ohi_plus    = OHI_plus,
phase       = Phase,
map_display = Map_Display,
display     = Display,
lat         = Latitude,
lon         = Longitude) %>%
filter(!is.na(display)) # remove rows that don't have point/shapefile
n_ohi_plus <- display_list %>%
filter(ohi_plus == 'YES')
n_ohi_plus_active <- n_ohi_plus %>%
filter(phase == 'active')
cat(sprintf('Total count of OHI+ assessments is %s!', dim(n_ohi_plus)[1]))
cat(sprintf('And %s are active, %s are completed OHI+ assessments.',
dim(n_ohi_plus_active)[1],
dim(n_ohi_plus)[1]- dim(n_ohi_plus_active)[1]))
n_ohi_plus_active
display_shp <-  display_list %>%
filter(map_display == 'shapefile')
old <- read.csv("assets/maps/regions_shape.csv")
if(length(setdiff(display_shp$country, old$country))>0){
warning('Countries with shapefiles have been added, will need to update the shapefile map')
}
display_pt <-  display_list %>%
filter(map_display == 'point')
# error if not all fields have lat/lon data. See https://github.com/OHI-Science/issues/issues/625#issuecomment-217511758
if (NA %in% display_pt$lat | NA %in% display_pt$lon){
stop(sprintf('Missing lat or lon field for region to be displayed. Must fix or will not map proplerly.\n'))
}
old <- read.csv("assets/maps/regions_point.csv")
if(length(setdiff(display_pt$country, old$country))>0){
warning('Countries with points have been added, will need to update the point map')
}
if (nrow(display_pt) + nrow(display_shp) != nrow(display_list)) {
warning('please make sure all the countries to display have either shapefiles or lat/longs')
}
write.csv(display_shp, "assets/maps/regions_shape.csv", row.names=FALSE)
write.csv(display_pt, "assets/maps/regions_point.csv", row.names=FALSE)
library(tidyverse)
library(sp)
library(rgdal)
library(raster)
# library(leafletR) # alternative method for visualization
library(leaflet)
library(htmlwidgets)
library(jsonlite)
library(RColorBrewer)
library(rgeos)
dir_M <- c('Windows' = '//mazu.nceas.ucsb.edu/ohi',
'Darwin'  = '/Volumes/ohi',    ### connect (cmd-K) to smb://mazu/ohi
'Linux'   = '/home/shares/ohi')[[ Sys.info()[['sysname']] ]]
if (Sys.info()[['sysname']] != 'Linux' & !file.exists(dir_M)){
warning(sprintf("The Mazu directory dir_M set in src/R/common.R does not exist. Do you need to mount Mazu: %s?", dir_M))
}
region_poly <- readOGR(dsn='/var/data/ohi/git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions',
layer="allRegions")
# region_poly <- readOGR(dsn=file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions'),
region_poly <- readOGR(dsn=file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions'),
layer="allRegions")
region_poly_data <- read.csv('assets/maps/regions_shape.csv')
region_poly <- region_poly[region_poly@data$country %in% region_poly_data$country, ]
## Add color data
colors <- data.frame(phase = c("active", "completed"),
color= c('#0083A3', '#00ADDD'))
region_poly@data <- region_poly@data %>%
left_join(region_poly_data, by="country") %>%
left_join(colors, by="phase")
popup_poly <- paste0('<b>', region_poly@data$display, '</b>',
'<br/>', "status: ", region_poly@data$phase)
points <- read.csv("assets/maps/regions_point.csv")
popup_points <- paste0('<b>', points$display, '</b>',
'<br/>', "status: ", points$phase) # use this for new line: , "<br/>")
## point ideas:
##https://sites.google.com/site/gmapsdevelopment/
icon_new <- makeIcon(
iconUrl = "http://maps.google.com/mapfiles/ms/micons/blue-dot.png",
iconWidth = 25, iconHeight = 27,
iconAnchorX = 15, iconAnchorY =27)
m <- leaflet(width="100%", height="600px") %>%
setView(-30, 30, 2) %>%
addTiles(options=tileOptions(noWrap=TRUE)) %>%
#      addTiles(options=tileOptions(minZoom=3, noWrap=TRUE)) %>%
#addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
#   addTiles(options = tileOptions(noWrap = TRUE)) %>%
#   fitBounds(-180, -70, 180, 80) %>%
addPolygons(data = region_poly,
#fillColor = myPalette(nrow(regionAll)),
fillColor = region_poly@data$color,
popup=popup_poly,
#stroke=FALSE,
color = "#A8A8A8",
weight = 1,
opacity = 0.5,
fillOpacity = 0.4) %>%
addMarkers(data=points, ~lon, ~lat, popup = ~as.character(popup_points), icon=icon_new)
saveWidget(m, file="allRegions.html", selfcontained=FALSE)
unlink("_includes/themes/OHI/maps/allRegions.html", recursive=TRUE)
file.rename(from="allRegions.html", to="_includes/themes/OHI/maps/allRegions.html")
unlink("allRegions.html")
unlink("projects/allRegions_files", recursive=TRUE) # delete old folder
warning('Now move `/allRegions_files` to `/projects/allRegions_files`!')
warning('Seriously, did you move `/allRegions_files` to `/projects/allRegions_files`!?')
# we should script this someday but actually a pain to loop through subdirectories and copy
citation(ohicore)
citation('ohicore')
