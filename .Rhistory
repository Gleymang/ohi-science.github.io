system('git checkout dev')
install.packages('googlesheets')
library(googlesheets) # install.packages('googlesheets') # by Jenny Bryan
library(dplyr)
gs_auth(new_user = TRUE)
gs_auth(new_user = TRUE)
?gs_auth
gs_auth(new_user = TRUE)
gs_auth(new_user = FALSE)
library(dplyr)
library(sp)
library(rgdal)
library(raster)
# library(leafletR) # alternative method for visualization
library(leaflet)
library(htmlwidgets)
library(jsonlite)
library(RColorBrewer)
library(rgeos)
source('../ohiprep/src/R/common.R')
install.packages("raster", "leafletR", "htmlwidgets")
install.packages("raster")
install.pach
install.packages("leaflet")
install.packages('htmlwidgets')
library(dplyr)
library(sp)
library(rgdal)
library(raster)
# library(leafletR) # alternative method for visualization
library(leaflet)
library(htmlwidgets)
library(jsonlite)
library(RColorBrewer)
library(rgeos)
source('../ohiprep/src/R/common.R')
USWC <- readOGR(dsn=file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data'), layer= 'USWestCoast_gcs')
library(dplyr)
library(sp)
library(rgdal)
library(raster)
# library(leafletR) # alternative method for visualization
library(leaflet)
library(htmlwidgets)
library(jsonlite)
library(RColorBrewer)
library(rgeos)
dir_M <- c('Windows' = '//mazu.nceas.ucsb.edu/ohi',
'Darwin'  = '/Volumes/ohi',    ### connect (cmd-K) to smb://mazu/ohi
'Linux'   = '/home/shares/ohi')[[ Sys.info()[['sysname']] ]]
if (Sys.info()[['sysname']] != 'Linux' & !file.exists(dir_M)){
warning(sprintf("The Mazu directory dir_M set in src/R/common.R does not exist. Do you need to mount Mazu: %s?", dir_M))
}
region_poly <- readOGR(dsn=file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions'),
layer="allRegions")
region_poly@data <- region_poly@data %>%
dplyr::rename(country = Region)
region_poly_data <- read.csv('assets/maps/regions_shape.csv')
region_poly <- region_poly[region_poly@data$country %in% region_poly_data$country, ]
## Add color data
colors <- data.frame(phase = c("active", "completed"),
color= c('#0083A3', '#00ADDD'))
region_poly@data <- region_poly@data %>%
left_join(region_poly_data, by="country") %>%
left_join(colors, by="phase")
popup_poly <- paste0('<b>', region_poly@data$display, '</b>',
'<br/>', "status: ", region_poly@data$phase)
points <- read.csv("assets/maps/regions_point.csv")
popup_points <- paste0('<b>', points$display, '</b>',
'<br/>', "status: ", points$phase) # use this for new line: , "<br/>")
icon_new <- makeIcon(
iconUrl = "http://maps.google.com/mapfiles/ms/micons/blue-dot.png",
iconWidth = 25, iconHeight = 27,
iconAnchorX = 15, iconAnchorY =27)
m <- leaflet(width="100%", height="600px") %>%
setView(-30, 30, 2) %>%
addTiles(options=tileOptions(noWrap=TRUE)) %>%
#      addTiles(options=tileOptions(minZoom=3, noWrap=TRUE)) %>%
#addProviderTiles("OpenStreetMap.BlackAndWhite") %>%
#   addTiles(options = tileOptions(noWrap = TRUE)) %>%
#   fitBounds(-180, -70, 180, 80) %>%
addPolygons(data = region_poly,
#fillColor = myPalette(nrow(regionAll)),
fillColor = region_poly@data$color,
popup=popup_poly,
#stroke=FALSE,
color = "#A8A8A8",
weight = 1,
opacity = 0.5,
fillOpacity = 0.4) %>%
addMarkers(data=points, ~lon, ~lat, popup = ~as.character(popup_points), icon=icon_new)
saveWidget(m, file="allRegions.html", selfcontained=FALSE)
file.copy("allRegions.html", "_includes/themes/OHI/maps/allRegions.html", overwrite = TRUE,
copy.mode = TRUE, copy.date = FALSE)
file.copy("allRegions.html", "_includes/themes/OHI/maps/allRegions.html", overwrite = TRUE)
unlink("_includes/themes/OHI/maps/allRegions.html", recursive=TRUE)
file.copy("allRegions.html", "_includes/themes/OHI/maps/allRegions.html", overwrite = TRUE)
file.rename("allRegions.html", "_includes/themes/OHI/maps/allRegions.html", overwrite = TRUE)
file.rename("allRegions.html", "_includes/themes/OHI/maps/allRegions.html")
file.rename(from="allRegions.html", to="_includes/themes/OHI/maps/allRegions.html")
saveWidget(m, file="allRegions.html", selfcontained=FALSE)
dir()
file.rename(from="allRegions.html", to="_includes/themes/OHI/maps/allRegions.html")
saveWidget(m, file="allRegions.html", selfcontained=FALSE)
source('../ohiprep/src/R/common.R')
dir(dir_M)
bm <- readOGR(dsn=file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions',
layer="allRegions")
)
library(dplyr)
library(sp)
library(rgdal)
library(raster)
# library(leafletR) # alternative method for visualization
library(leaflet)
library(htmlwidgets)
library(jsonlite)
library(RColorBrewer)
library(rgeos)
source('../ohiprep/src/R/common.R')
install.packages("raster", "leaflet", "rgeos")
install.packages("leaflet")
install.packages("raster")
install.packages("rgeos")
library(dplyr)
library(sp)
library(rgdal)
library(raster)
library(leaflet)
library(htmlwidgets)
library(jsonlite)
library(RColorBrewer)
library(rgeos)
source('../ohiprep/src/R/common.R')
bm <- readOGR(dsn=file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions'),
layer="allRegions")
plot(bm)
bm
map1 <- readOGR('../ohiprep/globalprep/spatial/downres', layer="rgn_eez_gcs_low_res")
map1 <- map1[map1@data$rgn_nam %in% c('Brazil', 'Colombia',
'China', 'Canada',
'Israel', 'Chile', 'Fiji'), ]
proj4string(map1) <- CRS(proj4string(USWC))
USWC <- readOGR(dsn='/var/data/ohi/git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions', layer= 'USWestCoast_gcs')
USWC <- readOGR(dsn='/var/data/ohi/git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions', layer= 'USWestCoast_gcs')
USWC <- readOGR(dsn= file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions'), layer= 'USWestCoast_gcs')
USWC@data <- dplyr::select(USWC@data, country = rgn_name)
USWC@data$country = "United States - West Coast"
USWC <- spChFIDs(USWC, as.character(USWC@data$country))
proj4string(map1) <- CRS(proj4string(USWC))
map1@data <- map1@data %>%
dplyr::select(country=rgn_nam)
map1 <- spChFIDs(map1, as.character(map1@data$country))
bhi <- readOGR(dsn= file.path(dir_M, 'git-annex/clip-n-ship/bhi/spatial'), layer = 'rgn_offshore_gcs')
bhi <- gBuffer(bhi, width=0.05)
pid <- sapply(slot(bhi, 'polygons'), function(x) slot(x, "ID"))
p.df <- data.frame(ID=1:length(bhi), row.names=pid)
bhi <- SpatialPolygonsDataFrame(bhi, data=p.df)
bhi@data$country <- "Baltic Sea"
bhi@data <- bhi@data %>%
dplyr::select(country)
bhi <- spChFIDs(bhi, as.character(bhi@data$country))
bci <- readOGR(dsn = file.path(dir_M, 'git-annex/clip-n-ship/ohibc/spatial'), layer = 'rgn_offshore_gcs')
bci <- gBuffer(bci, width=0.1)
pid <- sapply(slot(bci, 'polygons'), function(x) slot(x, "ID"))
p.df <- data.frame(ID=1:length(bci), row.names=pid)
bci <- SpatialPolygonsDataFrame(bci, data=p.df)
bci@data$country <- "Canada - British Columbia"
bci@data <- bci@data %>%
dplyr::select(country)
bci <- spChFIDs(bci, as.character(bci@data$country))
gye <- readOGR(dsn= file.path(dir_M, 'git-annex/clip-n-ship/gye/spatial'), layer = 'rgn_offshore_gcs')
gye <- gBuffer(gye, width=0.1)
pid <- sapply(slot(gye, 'polygons'), function(x) slot(x, "ID"))
p.df <- data.frame(ID=1:length(gye), row.names=pid)
gye <- SpatialPolygonsDataFrame(gye, data=p.df)
gye@data$country <- "Ecuador - Gulf of Guayaquil"
gye@data <- gye@data %>%
dplyr::select(country)
gye <- spChFIDs(gye, as.character(gye@data$country))
library(maptools)
regionAll <- rbind(map1, bhi, bci, USWC, gye)
regionAll
plot(regionAll)
writeOGR(regionAll, dsn = file.path(dir_M, 'git-annex/Global/NCEAS-Regions_v2014/data/website_OHIplus_regions'),
layer="allRegions", driver = "ESRI Shapefile", overwrite=TRUE)
